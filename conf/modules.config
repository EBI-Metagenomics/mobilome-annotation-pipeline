/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/


process {

    withName: AMRFINDER_PLUS {
        memory     = { 72.GB * task.attempt }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/functional_annotation" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: AMRFINDER_REPORT {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/functional_annotation" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: ARAGORN {
        ext.args = [
            "-w",
            "-i",
            "-t",
            "-gc1",
        ].join(' ')
    }

    withName: 'BLAST_BLASTP:BLASTP_PROKKA' {
        ext.args   = [
            "-evalue",
            "1E-9",
            "-qcov_hsp_perc",
            " 80",
            "-num_descriptions",
            "1",
            "-num_alignments",
            "1",
            "-seg",
            "no",
            "-outfmt",
            "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore qlen slen stitle",
        ].join(' ')
        ext.prefix = { "${meta.id}_blastp_uniprot" }
    }

    withName: FASTA_WRITER {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: GENOMAD {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/prediction/genomad_results/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: GFF_MAPPING {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/gff_output_files/" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: GFF_REDUCE {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/gff_output_files/" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: INTEGRATOR {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: INTEGRONFINDER {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/prediction/integronfinder_results/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: ISESCAN {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/prediction/isescan_results/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: MACSYFINDER {
        ext.args = [
            "--coverage-profile",
            "0.3",
            "--replicon-topology",
            "linear",
            "--db-type",
            "ordered_replicon",
            "--hmmer",
            "hmmsearch",
            "--models",
            "ICEscan",
            "all",
        ].join(' ')
    }

    withName: OUTLIER_FINDER {
        memory     = { 24.GB * task.attempt }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/prediction/compositional_outliers_results/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: PRODIGAL {
        ext.args = [
            "-p",
            "meta",
        ].join(' ')
    }

    withName: PROKKA {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/functional_annotation/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: RENAME {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/preprocessing/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: VIRIFY_QC {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/prediction/virify_filter/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: VMATCH {
        ext.args  = [
            "-dna",
            "-pl",
            "-lcp",
            "-suf",
            "-tis",
            "-ois",
            "-bwt",
            "-bck",
            "-sti1",
        ].join(' ')
        ext.args2 = [
            "-l",
            "15",
            "-showdesc",
            "0",
        ].join(' ')
    }

    // nf-core BLAST module configurations
    withName: 'DIAMOND_BLASTP:MOBILEOG_BLAST' {
        label      = 'process_low'
        ext.args   = '--evalue 1e-20 --query-cover 90 --id 90 --max-hsps 15'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/functional_annotation/mobileog/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: 'BLAST_BLASTN:RESFINDER_BLAST' {
        ext.args   = '-evalue 0.0001 -max_hsps 1 -num_descriptions 1 -num_alignments 1 -outfmt "6 std slen stitle"'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/functional_annotation/resfinder/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: 'BLAST_BLASTP:VFDB_BLAST' {
        ext.args   = '-evalue 0.0001 -max_hsps 1 -num_descriptions 1 -num_alignments 1 -outfmt "6 std slen stitle"'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/functional_annotation/vfdb/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: 'BLAST_BLASTP:ISFINDER_BLAST' {
        ext.args   = '-evalue 0.0001 -max_hsps 1 -num_descriptions 1 -num_alignments 1 -outfmt "6 std slen stitle"'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/functional_annotation/isfinder/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: 'BLAST_BLASTP:METAL_RESISTANCE_BLAST' {
        ext.args   = '-evalue 0.0001 -max_hsps 1 -num_descriptions 1 -num_alignments 1 -outfmt "6 std slen stitle"'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/functional_annotation/metal/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: 'BLAST_BLASTP:DEGRADATION_BLAST' {
        ext.args   = '-evalue 0.0001 -max_hsps 1 -num_descriptions 1 -num_alignments 1 -outfmt "6 std slen stitle"'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/functional_annotation/degradation/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    withName: 'BLAST_BLASTN:SYMBIOSIS_BLAST' {
        ext.args   = '-evalue 0.0001 -max_hsps 1 -num_descriptions 1 -num_alignments 1 -outfmt "6 std slen stitle"'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/functional_annotation/symbiosis/" },
            mode: params.publish_dir_mode,
            enabled: params.publish_all,
        ]
    }

    // Filter configurations for BLAST results
    withName: FILTER_BLAST_RESULTS_RESFINDER {
        ext.args   = '--type nucleotide'
        ext.suffix = 'arg'
    }

    withName: FILTER_BLAST_RESULTS_VFDB {
        ext.args   = '--type protein'
        ext.suffix = 'vf'
    }

    withName: FILTER_BLAST_RESULTS_ISFINDER {
        ext.args   = '--type protein'
        ext.suffix = 'is'
    }

    withName: FILTER_BLAST_RESULTS_METAL {
        ext.args   = '--type protein'
        ext.suffix = 'metal'
    }

    withName: FILTER_BLAST_RESULTS_DEGRADATION {
        ext.args   = '--type protein'
        ext.suffix = 'degradation'
    }

    withName: FILTER_BLAST_RESULTS_SYMBIOSIS {
        ext.args   = '--type nucleotide'
        ext.suffix = 'symbiosis'
    }

    // Pipeline info modules
    withName: DUMP_SOFTWARE_VERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
}
